<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>cilium/ebpf on LeonHwang&#39;s Blogs</title>
    <link>https://le0nhwan9.github.io/tags/cilium/ebpf/</link>
    <description>Recent content in cilium/ebpf on LeonHwang&#39;s Blogs</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh</language><atom:link href="https://le0nhwan9.github.io/tags/cilium/ebpf/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>eBPF Talk: bpf verifier 报告 ENOSPC</title>
      <link>https://le0nhwan9.github.io/post/ebpf-talk-24-bpf-verifier-enospc/</link>
      <pubDate>Sun, 21 May 2023 16:19:32 +0800</pubDate>
      
      <guid>https://le0nhwan9.github.io/post/ebpf-talk-24-bpf-verifier-enospc/</guid>
      <description>今天遇到个不常见的问题：在往内核装载 bpf 程序时，bpf verifier 报告错误： 1 failed to load bpf with bitmap size 8: failed to load bpf obj and bpf maps: field Acl: program acl: load program: no space left on device: 578: R0=map_value(id=0,off=0,ks=8,vs=64,imm=0) R1_w=map_ptr(id=0,off=0,ks=4,vs=4,imm=0) R2_w=fp-4 R3_w=invP1 R4=invP(id=69 (3524 line(s) omitted) 觉</description>
    </item>
    
    <item>
      <title>eBPF Talk: 全局变量实战指南</title>
      <link>https://le0nhwan9.github.io/post/ebpf-talk-22-global-variables-in-action/</link>
      <pubDate>Sun, 21 May 2023 16:12:19 +0800</pubDate>
      
      <guid>https://le0nhwan9.github.io/post/ebpf-talk-22-global-variables-in-action/</guid>
      <description>类似于常量的使用，如今在 eBPF 里也能够使用全局变量了。 使用例子 源代码：global-variable example 以 kprobe TCP 连接建立事件为例子，当有新的 TCP 连接时</description>
    </item>
    
    <item>
      <title>eBPF Talk: cilium/ebpf 中 bpf map 的诞生</title>
      <link>https://le0nhwan9.github.io/post/ebpf-talk-13-bpf-map-new-born-in-cilium_ebpf/</link>
      <pubDate>Sat, 20 May 2023 17:17:39 +0800</pubDate>
      
      <guid>https://le0nhwan9.github.io/post/ebpf-talk-13-bpf-map-new-born-in-cilium_ebpf/</guid>
      <description>在博客 eBPF Talk: 揭秘 BPF map 前生今世，已讲解了 bpf map 从定义到创建的整个过程。 不过博客中讲解的加载器是 C 语言的 libbpf。 在此，就讲解一下纯 Go 语言的加载</description>
    </item>
    
  </channel>
</rss>
